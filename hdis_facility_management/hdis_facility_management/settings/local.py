"""
Django settings for hdis_facility_management project.

Generated by 'django-admin startproject' using Django 4.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os
from static_variables import *

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'host.docker.internal', 'docker.for.mac.localhost']
CORS_ORIGIN_ALLOW_ALL = True    #TODO: Debug only. Remove for Production

INSTALLED_APPS = [
    #'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'oauth2_provider',
    'facility_management',
    'corsheaders',
]

AUTHENTICATION_BACKENDS = [
    'oauth2_provider.backends.OAuth2Backend',
    # Uncomment the following if you want to access the admin
    #'django.contrib.auth.backends.ModelBackend',
]
# The following OAuth2 configurations must be updated for each environment. Note that the Client Secret is unhashed.
HDIS_AUTH_SERVER="http://host.docker.internal:8080/api/v1"
OAUTH2_CLIENT_ID = 'xouGo988NvlK7l5i1fiGwCOyMoixcw5zjckPEshp'
OAUTH2_CLIENT_SECRET = 'HMe6mYBFIyzhihwi3OwclAEpNZi05sauIGRQxDdqCakfHtVo2E96ZZn3UXootWjRyBhV2FGYKXyt6EVxBprd2CpUiMEix26yGcoGJGR3vOksVV04VN7r6w6I7pS56vbf'
OAUTH2_TOKEN_URL = HDIS_AUTH_SERVER + '/o/token/'
OAUTH2_AUTHORIZATION_URL = HDIS_AUTH_SERVER + '/o/authorize/'
OAYTH2_REDIRECT_URL = 'http://host.docker.internal:8081/api/v1/oauth2/callback'

MEMBERSHIP_URL_PATH = f"/members/{0}/facility/{1}"
REGISTRATION_URL_PATH = "/registration/"

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',    #Must appear before MessageMiddleware
    # AuthenticationMiddleware is NOT required for using django-oauth-toolkit but must appear before OAuth2TokenMiddleware.
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    'oauth2_provider.middleware.OAuth2TokenMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'hdis_facility_management.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'hdis_facility_management.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'facility_management',
        'USER': 'facility_management_admin',
        'PASSWORD': 'facility_management_admin_password',
        'HOST': 'db',
        'PORT': '3306',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
# STATICFILES_DIRS = (
#     BASE_DIR,
# )
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
    ),
}

OAUTH2_PROVIDER = {
    'OAUTH2_VALIDATOR_CLASS': 'oauth2_provider.oauth2_validators.OAuth2Validator',    #Handles access token validation
    'RESOURCE_SERVER_INTROSPECTION_URL': HDIS_AUTH_SERVER + '/o/introspect/',
    'RESOURCE_SERVER_INTROSPECTION_CREDENTIALS': (OAUTH2_CLIENT_ID, OAUTH2_CLIENT_SECRET),
}