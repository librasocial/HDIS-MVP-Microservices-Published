# Generated by Django 4.0.1 on 2023-06-06 16:25

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Facility',
            fields=[
                ('PrimaryKey', models.UUIDField(primary_key=True, serialize=False)),
                ('uniqueFacilityIdentificationNumber', models.CharField(blank=True, max_length=64, null=True)),
                ('facilityTypeCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('facilityServiceCode', models.CharField(blank=True, max_length=18, null=True)),
                ('departmentName', models.CharField(blank=True, max_length=99, null=True)),
                ('referralFacilityIdentificationNumber', models.CharField(blank=True, max_length=10, null=True)),
                ('referralFacilityTypeCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('referralFromFacilityIdentificationNumber', models.CharField(blank=True, max_length=10, null=True)),
                ('referralFromFacilityTypeCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('facilityGlobalUniqueIdentifier', models.BinaryField(blank=True, null=True)),
                ('facilitySpecialtyCode', models.IntegerField(default=999, validators=[django.core.validators.MaxValueValidator(999)])),
                ('wardName', models.CharField(blank=True, max_length=99, null=True)),
            ],
            options={
                'verbose_name_plural': 'Facility',
                'db_table': 'Facility',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('PrimaryKey', models.UUIDField(primary_key=True, serialize=False)),
                ('UniqueHealthIdentificationNumber', models.CharField(blank=True, max_length=18, null=True)),
                ('UniqueHealthIdentificationID', models.CharField(blank=True, max_length=254, null=True)),
                ('AlternateUniqueIdentificationNumberType', models.IntegerField(default=0)),
                ('AlternateUniqueIdentificationNumber', models.CharField(blank=True, max_length=18, null=True)),
                ('NationalityCode', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name_plural': 'Person',
                'db_table': 'Person',
            },
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('PrimaryKey', models.UUIDField(primary_key=True, serialize=False)),
                ('uniqueIndividualHealthCareProviderNumber', models.CharField(blank=True, max_length=64, null=True)),
                ('careProviderMobileNumber', models.CharField(blank=True, max_length=10, null=True)),
                ('careProviderEmailAddress', models.CharField(blank=True, max_length=254, null=True)),
                ('careProviderName', models.CharField(blank=True, max_length=99, null=True)),
                ('healthServiceProviderRoleCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('healthServiceProviderRoleFreeText', models.CharField(blank=True, max_length=99, null=True)),
                ('healthServiceProviderType', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('facilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.facility')),
            ],
            options={
                'verbose_name_plural': 'Provider',
                'db_table': 'Provider',
            },
        ),
        migrations.CreateModel(
            name='ProviderSchedule',
            fields=[
                ('PrimaryKey', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ResourceScheduleStartDate', models.DateTimeField(null=True)),
                ('ResourceScheduleEndDate', models.DateTimeField(null=True)),
                ('ResourceScheduleStartTime', models.CharField(default='09:00', max_length=10)),
                ('ResourceScheduleEndTime', models.CharField(default='17:00', max_length=10)),
                ('ResourceType', models.CharField(default='CareProvider', max_length=50)),
                ('providerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.provider')),
            ],
            options={
                'verbose_name_plural': 'ProviderSchedule',
                'db_table': 'ProviderSchedule',
            },
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('PrimaryKey', models.UUIDField(primary_key=True, serialize=False)),
                ('localFacilityPatientId', models.CharField(blank=True, max_length=18, null=True)),
                ('PatientName', models.CharField(blank=True, max_length=99, null=True)),
                ('PatientAge', models.CharField(blank=True, max_length=9, null=True)),
                ('PatientDOB', models.DateTimeField(null=True)),
                ('PatientGenderCode', models.CharField(blank=True, max_length=1, null=True)),
                ('patientArrivalDateTime', models.DateTimeField(null=True)),
                ('patientLandlineNumber', models.CharField(blank=True, max_length=8, null=True)),
                ('patientMobileNumber', models.CharField(blank=True, max_length=10, null=True)),
                ('patientEmailAddress', models.CharField(blank=True, max_length=254, null=True)),
                ('reasonForVisit', models.CharField(blank=True, max_length=99, null=True)),
                ('birthOrder', models.IntegerField(default=0)),
                ('parity', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('gravida', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('pregnancyIndicator', models.BooleanField(default=0)),
                ('durationOfPregnancy', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('facilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.facility')),
                ('personId', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.person')),
            ],
            options={
                'verbose_name_plural': 'Patient',
                'db_table': 'Patient',
            },
        ),
        migrations.CreateModel(
            name='Billing',
            fields=[
                ('PrimaryKey', models.UUIDField(primary_key=True, serialize=False)),
                ('serviceType', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('serviceItemName', models.CharField(blank=True, max_length=99, null=True)),
                ('quantityOfService', models.CharField(blank=True, max_length=50, null=True)),
                ('facilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.facility')),
                ('patientId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.patient')),
                ('providerId', models.ManyToManyField(related_name='bills', to='appointment_scheduling.Provider')),
            ],
            options={
                'verbose_name_plural': 'Billing',
                'db_table': 'Billing',
            },
        ),
        migrations.CreateModel(
            name='AppointmentSessionSlots',
            fields=[
                ('PrimaryKey', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('AppointmentSessionStartDate', models.DateField(null=True)),
                ('AppointmentSessionStartTime', models.DateTimeField(null=True)),
                ('AppointmentSessionEndTime', models.DateTimeField(null=True)),
                ('AppointmentScheduleDate', models.DateTimeField(null=True)),
                ('AppointmentBookingStatusCode', models.IntegerField(default=999, validators=[django.core.validators.MaxValueValidator(999)])),
                ('AppointmentSessionAvailabilityStatusCode', models.IntegerField(default=999, validators=[django.core.validators.MaxValueValidator(999)])),
                ('AppointmentProviderAvailabilityStatusCode', models.IntegerField(default=999, validators=[django.core.validators.MaxValueValidator(999)])),
                ('providerscheduleId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.providerschedule')),
            ],
            options={
                'verbose_name_plural': 'AppointmentSessionSlots',
                'db_table': 'AppointmentSessionSlots',
            },
        ),
        migrations.CreateModel(
            name='AppointmentDetails',
            fields=[
                ('PrimaryKey', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('appointmentBookingStatusCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('appointmentProviderAvailabilityStatusCode', models.BooleanField(default=1)),
                ('appointmentSessionAvailabilityStatusCode', models.BooleanField(default=1)),
                ('resourceScheduleAvailabilityStatusCode', models.BooleanField(default=1)),
                ('appointmentSessionStartDateTime', models.DateTimeField(null=True)),
                ('appointmentSessionEndDateTime', models.DateTimeField(null=True)),
                ('resourceScheduleStartDateTime', models.DateTimeField(null=True)),
                ('resourceScheduleEndDateTime', models.DateTimeField(null=True)),
                ('resourceType', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('appointmentRequestReferenceNumber', models.CharField(blank=True, max_length=50, null=True)),
                ('appointmentRequestedDateTime', models.DateTimeField(null=True)),
                ('appointmentChannel', models.CharField(blank=True, max_length=20, null=True)),
                ('facilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.facility')),
                ('patientId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.patient')),
                ('providerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.provider')),
            ],
            options={
                'verbose_name_plural': 'AppointmentDetails',
                'db_table': 'AppointmentDetails',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('PrimaryKey', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('AppointmentReferenceNumber', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('AppointmentBookingDate', models.DateTimeField(null=True)),
                ('AppointmentBookingTime', models.DateTimeField(null=True)),
                ('AppointmentBookingStatusCode', models.IntegerField(default=99, validators=[django.core.validators.MaxValueValidator(99)])),
                ('AppointmentChannel', models.CharField(default='Walkin', max_length=50)),
                ('appointmentsessionslotsId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.appointmentsessionslots')),
                ('facilityId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.facility')),
                ('patientId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.patient')),
                ('providerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment_scheduling.provider')),
            ],
            options={
                'verbose_name_plural': 'Appointment',
                'db_table': 'Appointment',
            },
        ),
    ]
